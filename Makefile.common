
#export TOP:=$(PWD)
export TOP:=/home/me/Documents/dev

SED=/usr/bin/sed
SUDO=/usr/bin/sudo
INSTALL=/usr/bin/install

build: TARGET=build
clean: TARGET=clean

RUNID:=$(shell date +'%Y%m%d%H%M%S')

# these can be set on make command line to start with a fresh vm and/or fresh containers
FORCE_VM_CREATION=0
FORCE_CONTAINER_CREATION=0

# this def can be overrided in any file that includes this one
DOCKER_COMPOSE_VERSION=1.27.4

#
APP_SERVICE_IP=$(shell ip --oneline --Numeric --family inet addr show dev enp0s25 primary scope global | sed -E 's/  */ /g' | cut -d' ' -f4 | sed -E 's@/[[:digit:]]+$$@@')

# initialize
FORCE_VM_CREATION=0
FORCE_CONTAINER_CREATION=0
FORCE_DB_CREATION=0

FORWARD_PORT_CMD=$(TOP)/bin/forward_port.sh
UPDATE_LEGACY_IPTABLES=$(TOP)/bin/update_legacy_iptables.sh

# this value should be dynamic
EXTERNAL_INTERFACE=enp0s25

# these values are defined here so they are globally unique and don't overlap
DEDUPLIFIER_EXTERNAL_PORT=5000
TEST0_EXTERNAL_PORT=5001

DOCKER_COMPOSE_FILE=docker-compose.yml
#DOCKER_COMPOSE_FILE_TEMPLATE=$(DOCKER_COMPOSE_FILE).tmpl

HOST_VM_CLOUD_INIT_FILE=cloud-init.yml
HOST_VM_CLOUD_INIT_FILE_TEMPLATE=$(HOST_VM_CLOUD_INIT_FILE).tmpl

HOST_VM_NET_SVC_DEF=host_vm_network_config.service
HOST_VM_NET_SVC_EXEC=host_vm_network_config.sh

HOST_VM_NET_SVC_SRC_DIR=$(TOP)/host_vm_network_service
SYSTEMD_SVC_DIR=/usr/lib/systemd/system
LOCAL_BIN=/usr/local/bin

CREATE_DOCKER_HOST_VM = $(shell if [ $(FORCE_VM_CREATION) -ne 0 ] || ! multipass list | grep "^$(APP_HOST) *Running " > /dev/null; then echo "new-docker-host-vm new-containers"; fi)

SERVICE_PATTERNS=$(foreach SERVICE, $(SERVICES), -e "$(SERVICE)")
SERVICE_COUNT=$(shell echo "$(SERVICES)" | wc -w)
CREATE_DOCKER_CONTAINERS = $(shell if [ -n "$(CREATE_DOCKER_HOST_VM)" ] || [ $(FORCE_CONTAINER_CREATION) -ne 0 ] || [ $(FORCE_DB_CREATION) -ne 0 ] || [ $(SERVICE_COUNT) -ne $$(multipass exec $(APP_HOST) -- sudo docker-compose --project-name $(APP_NAME) --file $(CODE_PATH)/$(DOCKER_COMPOSE_FILE) ps --services | grep -c $(SERVICE_PATTERNS)) ]; then echo "new-containers"; fi)

CREATE_DB = $(shell if [ -n "$(CREATE_DOCKER_HOST_VM)" ] || [ -n "$(CREATE_DOCKER_CONTAINERS)" ] || [ $(FORCE_DB_CREATION) -ne 0 ]; then echo "new-db"; fi)

# propagate local timezone
TIMEZONE=$(shell cat /etc/timezone)

